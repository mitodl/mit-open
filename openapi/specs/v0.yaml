openapi: 3.0.3
info:
  title: MIT Open API
  version: 0.0.1 (v0)
  description: MIT public API
paths:
  /api/v0/channels/:
    get:
      operationId: channels_list
      description: |-
        CRUD Operations related to Channels. Channels may represent groups
        or organizations at MIT and are a high-level categorization of content.
      summary: List
      parameters:
      - in: query
        name: channel_type
        schema:
          type: string
          enum:
          - department
          - pathway
          - topic
          - unit
        description: |-
          * `topic` - Topic
          * `department` - Department
          * `unit` - Unit
          * `pathway` - Pathway
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - channels
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChannelList'
          description: ''
    post:
      operationId: channels_create
      description: |-
        CRUD Operations related to Channels. Channels may represent groups
        or organizations at MIT and are a high-level categorization of content.
      summary: Create
      tags:
      - channels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChannelCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChannelCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/v0/channels/{id}/:
    get:
      operationId: channels_retrieve
      description: |-
        CRUD Operations related to Channels. Channels may represent groups
        or organizations at MIT and are a high-level categorization of content.
      summary: Retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - channels
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    patch:
      operationId: channels_partial_update
      description: |-
        CRUD Operations related to Channels. Channels may represent groups
        or organizations at MIT and are a high-level categorization of content.
      summary: Update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - channels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChannelWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChannelWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChannelWriteRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    delete:
      operationId: channels_destroy
      description: |-
        CRUD Operations related to Channels. Channels may represent groups
        or organizations at MIT and are a high-level categorization of content.
      summary: Destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this channel.
        required: true
      tags:
      - channels
      responses:
        '204':
          description: No response body
  /api/v0/channels/{id}/moderators/:
    get:
      operationId: channels_moderators_list
      description: View for listing and adding moderators
      summary: Channel Moderators List
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - channels
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChannelModerator'
          description: ''
    post:
      operationId: channels_moderators_create
      description: View for listing and adding moderators
      summary: Channel Moderators Create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - channels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelModeratorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChannelModeratorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChannelModeratorRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelModerator'
          description: ''
  /api/v0/channels/{id}/moderators/{moderator_name}/:
    delete:
      operationId: channels_moderators_destroy
      description: Remove the user from the moderator groups for this website
      summary: Channel Moderators Destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: moderator_name
        schema:
          type: string
          pattern: ^[A-Za-z0-9_]+$
        required: true
      tags:
      - channels
      responses:
        '204':
          description: No response body
  /api/v0/channels/type/{channel_type}/{name}/:
    get:
      operationId: channels_type_retrieve
      description: View for retrieving an individual channel by type and name
      summary: Channel Detail Lookup by channel type and name
      parameters:
      - in: path
        name: channel_type
        schema:
          type: string
          pattern: ^[A-Za-z0-9_\-]+$
        required: true
      - in: path
        name: name
        schema:
          type: string
          pattern: ^[A-Za-z0-9_\-]+$
        required: true
      tags:
      - channels
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/v0/ckeditor:
    get:
      operationId: ckeditor_retrieve
      description: Get the settings response
      tags:
      - ckeditor
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CKEditorSettings'
          description: ''
  /api/v0/news_events/:
    get:
      operationId: news_events_list
      description: Get a paginated list of feed items.
      parameters:
      - in: query
        name: feed_type
        schema:
          type: array
          items:
            type: string
            enum:
            - events
            - news
        description: |-
          The type of item

          * `news` - News
          * `events` - Events
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sortby
        schema:
          type: string
          enum:
          - -created
          - -event_date
          - -id
          - created
          - event_date
          - id
        description: |-
          Sort By

          * `id` - Object ID ascending
          * `-id` - Object ID descending
          * `event_date` - Event date ascending
          * `-event_date` - Event date  descending
          * `created` - Creation date ascending
          * `-created` - Creation date descending
      tags:
      - news_events
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedItemList'
          description: ''
  /api/v0/news_events/{id}/:
    get:
      operationId: news_events_retrieve
      description: Retrieve a single feed item.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed item.
        required: true
      tags:
      - news_events
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedItem'
          description: ''
  /api/v0/news_events_sources/:
    get:
      operationId: news_events_sources_list
      description: Get a paginated list of news/event feed sources.
      parameters:
      - in: query
        name: feed_type
        schema:
          type: array
          items:
            type: string
            enum:
            - events
            - news
        description: |-
          The type of source

          * `news` - News
          * `events` - Events
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - news_events_sources
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedSourceList'
          description: ''
  /api/v0/news_events_sources/{id}/:
    get:
      operationId: news_events_sources_retrieve
      description: Retrieve a single news/event feed source.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed source.
        required: true
      tags:
      - news_events_sources
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedSource'
          description: ''
  /api/v0/profiles/{user__username}/:
    get:
      operationId: profiles_retrieve
      description: View for profile
      parameters:
      - in: path
        name: user__username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - profiles
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: profiles_update
      description: View for profile
      parameters:
      - in: path
        name: user__username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: profiles_partial_update
      description: View for profile
      parameters:
      - in: path
        name: user__username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/v0/program_certificates/:
    get:
      operationId: program_certificates_list
      description: |-
        View for listing program certificates for a user
        (includes program letter links)
      parameters:
      - in: query
        name: micromasters_program_id
        schema:
          type: integer
      - in: query
        name: program_title
        schema:
          type: string
      tags:
      - program_certificates
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProgramCertificate'
          description: ''
  /api/v0/testimonials/:
    get:
      operationId: testimonials_list
      description: List all testimonials.
      summary: List
      parameters:
      - in: query
        name: channels
        schema:
          type: array
          items:
            type: integer
        description: The channels the attestation is for
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: offerors
        schema:
          type: array
          items:
            type: string
        description: The offerors the attestation is for
        explode: true
        style: form
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: position
        schema:
          type: integer
        description: Only show items that exist at this position
      tags:
      - testimonials
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttestationList'
          description: ''
  /api/v0/testimonials/{id}/:
    get:
      operationId: testimonials_retrieve
      description: Retrieve a testimonial.
      summary: Retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this attestation.
        required: true
      tags:
      - testimonials
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attestation'
          description: ''
  /api/v0/users/:
    get:
      operationId: users_list
      description: View for users
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: View for users
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v0/users/{username}/:
    get:
      operationId: users_retrieve
      description: View for users
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: View for users
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: View for users
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: View for users
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      responses:
        '204':
          description: No response body
  /api/v0/users/me/:
    get:
      operationId: users_me_retrieve
      description: User retrieve and update viewsets for the current user
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v0/websites/:
    post:
      operationId: websites_create
      description: View for user websites
      tags:
      - websites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserWebsiteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserWebsiteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserWebsiteRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWebsite'
          description: ''
  /api/v0/websites/{id}/:
    delete:
      operationId: websites_destroy
      description: View for user websites
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user website.
        required: true
      tags:
      - websites
      responses:
        '204':
          description: No response body
  /api/v0/widget_lists/{id}/:
    get:
      operationId: widget_lists_retrieve
      description: API for managing widget lists
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this widget list.
        required: true
      tags:
      - widget_lists
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetList'
          description: ''
    put:
      operationId: widget_lists_update
      description: API for managing widget lists
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this widget list.
        required: true
      tags:
      - widget_lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WidgetListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WidgetListRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetList'
          description: ''
    patch:
      operationId: widget_lists_partial_update
      description: API for managing widget lists
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this widget list.
        required: true
      tags:
      - widget_lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWidgetListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWidgetListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWidgetListRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetList'
          description: ''
components:
  schemas:
    Attestation:
      type: object
      description: Serializer for attestations.
      properties:
        id:
          type: integer
          readOnly: true
        avatar:
          type: string
          nullable: true
          description: Get the avatar image URL
          readOnly: true
        avatar_small:
          type: string
          nullable: true
          description: Get the avatar_small image URL
          readOnly: true
        avatar_medium:
          type: string
          nullable: true
          description: Get the avatar_medium image URL
          readOnly: true
        cover:
          type: string
          nullable: true
          description: Get the cover image URL
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        attestant_name:
          type: string
          description: The name of the attestant
          maxLength: 200
        title:
          type: string
          description: The attestant's title
          maxLength: 255
        quote:
          type: string
          description: The testimonial attestation
        position:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The position the attestation should occupy
        publish_date:
          type: string
          format: date-time
          nullable: true
          description: The datetime to show the testimonial
        channels:
          type: array
          items:
            type: integer
          description: Channels that the testimonial belongs to
        offerors:
          type: array
          items:
            type: string
          description: The offerors that this attestation can appear on
      required:
      - attestant_name
      - avatar
      - avatar_medium
      - avatar_small
      - cover
      - created_on
      - id
      - quote
      - title
      - updated_on
    BlankEnum:
      enum:
      - ''
    CKEditorSettings:
      type: object
      description: Serializer for CKEditor settings
      properties:
        token:
          type: string
          nullable: true
          description: Get the JWT token
          readOnly: true
      required:
      - token
    CertificateDesiredEnum:
      enum:
      - 'yes'
      - 'no'
      - not-sure-yet
      type: string
      description: |-
        * `yes` - Yes
        * `no` - No
        * `not-sure-yet` - Not Sure Yet
      x-enum-descriptions:
      - 'Yes'
      - 'No'
      - Not Sure Yet
    Channel:
      oneOf:
      - $ref: '#/components/schemas/TopicChannel'
      - $ref: '#/components/schemas/DepartmentChannel'
      - $ref: '#/components/schemas/UnitChannel'
      - $ref: '#/components/schemas/PathwayChannel'
      discriminator:
        propertyName: channel_type
        mapping:
          topic: '#/components/schemas/TopicChannel'
          department: '#/components/schemas/DepartmentChannel'
          unit: '#/components/schemas/UnitChannel'
          pathway: '#/components/schemas/PathwayChannel'
    ChannelCreateRequest:
      type: object
      description: |-
        Write serializer for Channel. Uses primary keys for referenced objects
        during requests, and delegates to ChannelSerializer for responses.
      properties:
        name:
          type: string
          minLength: 1
          pattern: ^[A-Za-z0-9_]+$
          maxLength: 100
        title:
          type: string
          minLength: 1
          maxLength: 100
        public_description:
          type: string
        sub_channels:
          type: array
          items:
            type: string
            minLength: 1
        featured_list:
          type: integer
          nullable: true
          description: Learning path featured in this channel.
        lists:
          type: array
          items:
            type: integer
            nullable: true
          description: Learning paths in this channel.
        avatar:
          type: string
          format: binary
          nullable: true
        banner:
          type: string
          format: binary
          nullable: true
        about:
          nullable: true
        channel_type:
          type: string
          allOf:
          - $ref: '#/components/schemas/ChannelTypeEnum'
        search_filter:
          type: string
          maxLength: 2048
        topic_detail:
          allOf:
          - $ref: '#/components/schemas/ChannelTopicDetailRequest'
          nullable: true
        department_detail:
          allOf:
          - $ref: '#/components/schemas/ChannelDepartmentDetailRequest'
          nullable: true
      required:
      - channel_type
      - name
      - title
    ChannelDepartmentDetail:
      type: object
      description: Serializer for the ChannelDepartmentDetail model
      properties:
        department:
          type: string
          nullable: true
    ChannelDepartmentDetailRequest:
      type: object
      description: Serializer for the ChannelDepartmentDetail model
      properties:
        department:
          type: string
          minLength: 1
          nullable: true
    ChannelModerator:
      type: object
      description: Serializer for moderators
      properties:
        moderator_name:
          type: string
          description: Returns the name for the moderator
        email:
          type: string
          description: Get the email from the associated user
        full_name:
          type: string
          description: Get the full name of the associated user
          readOnly: true
      required:
      - full_name
    ChannelModeratorRequest:
      type: object
      description: Serializer for moderators
      properties:
        moderator_name:
          type: string
          description: Returns the name for the moderator
        email:
          type: string
          description: Get the email from the associated user
    ChannelTopicDetail:
      type: object
      description: Serializer for the ChannelTopicDetail model
      properties:
        topic:
          type: integer
          nullable: true
    ChannelTopicDetailRequest:
      type: object
      description: Serializer for the ChannelTopicDetail model
      properties:
        topic:
          type: integer
          nullable: true
    ChannelTypeEnum:
      enum:
      - topic
      - department
      - unit
      - pathway
      type: string
      description: |-
        * `topic` - Topic
        * `department` - Department
        * `unit` - Unit
        * `pathway` - Pathway
      x-enum-descriptions:
      - Topic
      - Department
      - Unit
      - Pathway
    ChannelUnitDetail:
      type: object
      description: Serializer for the ChannelOfferorDetail model
      properties:
        unit:
          allOf:
          - $ref: '#/components/schemas/LearningResourceOfferorDetail'
          readOnly: true
      required:
      - unit
    CurrentEducationEnum:
      enum:
      - Doctorate
      - Master's or professional degree
      - Bachelor's degree
      - Associate degree
      - Secondary/high school
      - Junior secondary/junior high/middle school
      - Elementary/primary school
      - No formal education
      - Other education
      type: string
      description: |-
        * `` - ----
        * `Doctorate` - Doctorate
        * `Master's or professional degree` - Master's or professional degree
        * `Bachelor's degree` - Bachelor's degree
        * `Associate degree` - Associate degree
        * `Secondary/high school` - Secondary/high school
        * `Junior secondary/junior high/middle school` - Junior secondary/junior high/middle school
        * `Elementary/primary school` - Elementary/primary school
        * `No formal education` - No formal education
        * `Other education` - Other education
      x-enum-descriptions:
      - Doctorate
      - Master's or professional degree
      - Bachelor's degree
      - Associate degree
      - Secondary/high school
      - Junior secondary/junior high/middle school
      - Elementary/primary school
      - No formal education
      - Other education
    DepartmentChannel:
      type: object
      description: Serializer for Channel model of type department
      properties:
        id:
          type: integer
          readOnly: true
        avatar:
          type: string
          nullable: true
          description: Get the avatar image URL
        avatar_small:
          type: string
          nullable: true
          description: Get the avatar image small URL
          readOnly: true
        avatar_medium:
          type: string
          nullable: true
          description: Get the avatar image medium URL
          readOnly: true
        banner:
          type: string
          nullable: true
          description: Get the banner image URL
        is_moderator:
          type: boolean
          description: Return true if user is a moderator for the channel
          readOnly: true
        lists:
          type: array
          items:
            $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
        channel_url:
          type: string
          description: Get the URL for the channel
          readOnly: true
        featured_list:
          allOf:
          - $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
          nullable: true
          description: Learning path featured in this channel.
        sub_channels:
          type: array
          items:
            $ref: '#/components/schemas/SubChannel'
          readOnly: true
        channel_type:
          type: string
          default: department
          allOf:
          - $ref: '#/components/schemas/DepartmentChannelTypeEnum'
          readOnly: true
        department_detail:
          $ref: '#/components/schemas/ChannelDepartmentDetail'
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          pattern: ^[A-Za-z0-9_]+$
          maxLength: 100
        title:
          type: string
          maxLength: 100
        about:
          nullable: true
        configuration:
          nullable: true
        search_filter:
          type: string
          maxLength: 2048
        public_description:
          type: string
        ga_tracking_id:
          type: string
          maxLength: 24
        widget_list:
          type: integer
          nullable: true
      required:
      - avatar_medium
      - avatar_small
      - channel_type
      - channel_url
      - created_on
      - department_detail
      - featured_list
      - id
      - is_moderator
      - lists
      - name
      - sub_channels
      - title
      - updated_on
    DepartmentChannelTypeEnum:
      enum:
      - department
      type: string
      description: '* `department` - Department'
      x-enum-descriptions:
      - Department
    EventFeedItem:
      type: object
      description: Serializer for News FeedItem
      properties:
        id:
          type: integer
          readOnly: true
        feed_type:
          allOf:
          - $ref: '#/components/schemas/EventFeedItemFeedTypeEnum'
          default: events
          readOnly: true
        image:
          $ref: '#/components/schemas/FeedImage'
        event_details:
          $ref: '#/components/schemas/FeedEventDetail'
        guid:
          type: string
          maxLength: 2048
        title:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 200
        summary:
          type: string
        content:
          type: string
        source:
          type: integer
      required:
      - event_details
      - feed_type
      - guid
      - id
      - image
      - source
      - title
      - url
    EventFeedItemFeedTypeEnum:
      type: string
      enum:
      - events
    FeedEventDetail:
      type: object
      description: FeedEventDetail serializer
      properties:
        id:
          type: integer
          readOnly: true
        audience:
          type: array
          items:
            type: string
            maxLength: 255
        location:
          type: array
          items:
            type: string
            maxLength: 255
        event_type:
          type: array
          items:
            type: string
            maxLength: 255
        event_datetime:
          type: string
          format: date-time
      required:
      - audience
      - event_datetime
      - event_type
      - id
      - location
    FeedImage:
      type: object
      description: Serializer for FeedImage
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          maxLength: 2048
        description:
          type: string
          maxLength: 1024
        alt:
          type: string
          maxLength: 1024
      required:
      - id
    FeedItem:
      oneOf:
      - $ref: '#/components/schemas/NewsFeedItem'
      - $ref: '#/components/schemas/EventFeedItem'
      discriminator:
        propertyName: resource_type
        mapping:
          news: '#/components/schemas/NewsFeedItem'
          events: '#/components/schemas/EventFeedItem'
    FeedNewsDetail:
      type: object
      description: FeedNewsDetail serializer
      properties:
        id:
          type: integer
          readOnly: true
        authors:
          type: array
          items:
            type: string
            maxLength: 255
        topics:
          type: array
          items:
            type: string
            maxLength: 255
        publish_date:
          type: string
          format: date-time
      required:
      - id
      - publish_date
    FeedSource:
      type: object
      description: FeedSource serializer
      properties:
        id:
          type: integer
          readOnly: true
        image:
          $ref: '#/components/schemas/FeedImage'
        title:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 200
        description:
          type: string
        feed_type:
          $ref: '#/components/schemas/FeedSourceFeedTypeEnum'
      required:
      - feed_type
      - id
      - image
      - title
      - url
    FeedSourceFeedTypeEnum:
      enum:
      - news
      - events
      type: string
      description: |-
        * `news` - News
        * `events` - Events
      x-enum-descriptions:
      - News
      - Events
    GoalsEnum:
      enum:
      - career-growth
      - supplemental-learning
      - just-to-learn
      type: string
      description: |-
        * `career-growth` - Career Growth
        * `supplemental-learning` - Supplemental Learning
        * `just-to-learn` - Just to Learn
      x-enum-descriptions:
      - Career Growth
      - Supplemental Learning
      - Just to Learn
    LearningFormatEnum:
      enum:
      - online
      - hybrid
      - in_person
      type: string
      description: |-
        * `online` - Online
        * `hybrid` - Hybrid
        * `in_person` - In person
      x-enum-descriptions:
      - Online
      - Hybrid
      - In person
    LearningPathPreview:
      type: object
      description: Serializer for a minimal preview of Learning Paths
      properties:
        title:
          type: string
          maxLength: 256
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 2048
        id:
          type: integer
          readOnly: true
      required:
      - id
      - title
    LearningResourceOfferorDetail:
      type: object
      description: Serializer for LearningResourceOfferor with all details
      properties:
        code:
          type: string
          maxLength: 12
        channel_url:
          type: string
          description: Get the channel url for the offeror if it exists
          readOnly: true
          nullable: true
        name:
          type: string
          maxLength: 256
        professional:
          type: boolean
        offerings:
          type: array
          items:
            type: string
            maxLength: 128
        audience:
          type: array
          items:
            type: string
            maxLength: 128
        formats:
          type: array
          items:
            type: string
            maxLength: 128
        fee:
          type: array
          items:
            type: string
            maxLength: 128
        certifications:
          type: array
          items:
            type: string
            maxLength: 128
        content_types:
          type: array
          items:
            type: string
            maxLength: 128
        more_information:
          type: string
          format: uri
          maxLength: 200
        value_prop:
          type: string
      required:
      - channel_url
      - code
      - name
    LearningResourceOfferorDetailRequest:
      type: object
      description: Serializer for LearningResourceOfferor with all details
      properties:
        code:
          type: string
          minLength: 1
          maxLength: 12
        name:
          type: string
          minLength: 1
          maxLength: 256
        professional:
          type: boolean
        offerings:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        audience:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        formats:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        fee:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        certifications:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        content_types:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
        more_information:
          type: string
          format: uri
          maxLength: 200
        value_prop:
          type: string
      required:
      - code
      - name
    LearningResourceTopic:
      type: object
      description: Serializer for LearningResourceTopic model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        parent:
          type: integer
          nullable: true
        channel_url:
          type: string
          description: Get the channel url for the topic if it exists
          readOnly: true
          nullable: true
      required:
      - channel_url
      - id
      - name
    NewsFeedItem:
      type: object
      description: Serializer for News FeedItem
      properties:
        id:
          type: integer
          readOnly: true
        feed_type:
          allOf:
          - $ref: '#/components/schemas/NewsFeedItemFeedTypeEnum'
          default: news
          readOnly: true
        image:
          $ref: '#/components/schemas/FeedImage'
        news_details:
          $ref: '#/components/schemas/FeedNewsDetail'
        guid:
          type: string
          maxLength: 2048
        title:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 200
        summary:
          type: string
        content:
          type: string
        source:
          type: integer
      required:
      - feed_type
      - guid
      - id
      - image
      - news_details
      - source
      - title
      - url
    NewsFeedItemFeedTypeEnum:
      type: string
      enum:
      - news
    PaginatedAttestationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Attestation'
    PaginatedChannelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
    PaginatedFeedItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedItem'
    PaginatedFeedSourceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedSource'
    PatchedChannelWriteRequest:
      type: object
      description: Similar to ChannelCreateSerializer, with read-only name
      properties:
        name:
          type: string
          minLength: 1
          pattern: ^[A-Za-z0-9_]+$
          maxLength: 100
        title:
          type: string
          minLength: 1
          maxLength: 100
        public_description:
          type: string
        sub_channels:
          type: array
          items:
            type: string
            minLength: 1
        featured_list:
          type: integer
          nullable: true
          description: Learning path featured in this channel.
        lists:
          type: array
          items:
            type: integer
            nullable: true
          description: Learning paths in this channel.
        avatar:
          type: string
          nullable: true
          description: Get the avatar image URL
        banner:
          type: string
          nullable: true
          description: Get the banner image URL
        about:
          nullable: true
        channel_type:
          type: string
          allOf:
          - $ref: '#/components/schemas/ChannelTypeEnum'
        search_filter:
          type: string
          maxLength: 2048
        topic_detail:
          allOf:
          - $ref: '#/components/schemas/ChannelTopicDetailRequest'
          nullable: true
        department_detail:
          allOf:
          - $ref: '#/components/schemas/ChannelDepartmentDetailRequest'
          nullable: true
    PatchedProfileRequest:
      type: object
      description: Serializer for Profile
      properties:
        name:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        image_small:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        image_medium:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        email_optin:
          type: boolean
          writeOnly: true
        toc_optin:
          type: boolean
          writeOnly: true
        bio:
          type: string
          nullable: true
        headline:
          type: string
          nullable: true
          maxLength: 60
        location:
          writeOnly: true
          nullable: true
        topic_interests:
          type: array
          items:
            type: integer
        goals:
          type: array
          items:
            $ref: '#/components/schemas/GoalsEnum'
        current_education:
          oneOf:
          - $ref: '#/components/schemas/CurrentEducationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        certificate_desired:
          oneOf:
          - $ref: '#/components/schemas/CertificateDesiredEnum'
          - $ref: '#/components/schemas/BlankEnum'
        time_commitment:
          oneOf:
          - $ref: '#/components/schemas/TimeCommitmentEnum'
          - $ref: '#/components/schemas/BlankEnum'
        learning_format:
          oneOf:
          - $ref: '#/components/schemas/LearningFormatEnum'
          - $ref: '#/components/schemas/BlankEnum'
    PatchedUserRequest:
      type: object
      description: Serializer for User
      properties:
        profile:
          $ref: '#/components/schemas/ProfileRequest'
        email:
          type: string
          writeOnly: true
          minLength: 1
    PatchedWidgetListRequest:
      type: object
      description: Serializer for WidgetLists
      properties:
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/WidgetInstance'
          nullable: true
    PathwayChannel:
      type: object
      description: Serializer for Channel model of type pathway
      properties:
        id:
          type: integer
          readOnly: true
        avatar:
          type: string
          nullable: true
          description: Get the avatar image URL
        avatar_small:
          type: string
          nullable: true
          description: Get the avatar image small URL
          readOnly: true
        avatar_medium:
          type: string
          nullable: true
          description: Get the avatar image medium URL
          readOnly: true
        banner:
          type: string
          nullable: true
          description: Get the banner image URL
        is_moderator:
          type: boolean
          description: Return true if user is a moderator for the channel
          readOnly: true
        lists:
          type: array
          items:
            $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
        channel_url:
          type: string
          description: Get the URL for the channel
          readOnly: true
        featured_list:
          allOf:
          - $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
          nullable: true
          description: Learning path featured in this channel.
        sub_channels:
          type: array
          items:
            $ref: '#/components/schemas/SubChannel'
          readOnly: true
        channel_type:
          type: string
          default: pathway
          allOf:
          - $ref: '#/components/schemas/PathwayChannelTypeEnum'
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          pattern: ^[A-Za-z0-9_]+$
          maxLength: 100
        title:
          type: string
          maxLength: 100
        about:
          nullable: true
        configuration:
          nullable: true
        search_filter:
          type: string
          maxLength: 2048
        public_description:
          type: string
        ga_tracking_id:
          type: string
          maxLength: 24
        widget_list:
          type: integer
          nullable: true
      required:
      - avatar_medium
      - avatar_small
      - channel_type
      - channel_url
      - created_on
      - featured_list
      - id
      - is_moderator
      - lists
      - name
      - sub_channels
      - title
      - updated_on
    PathwayChannelTypeEnum:
      enum:
      - pathway
      type: string
      description: '* `pathway` - Pathway'
      x-enum-descriptions:
      - Pathway
    PreferencesSearch:
      type: object
      description: Serializer for profile search preference filters
      properties:
        certification:
          type: boolean
        topic:
          type: array
          items:
            type: string
        learning_format:
          type: array
          items:
            type: string
    Profile:
      type: object
      description: Serializer for Profile
      properties:
        name:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
          maxLength: 1024
        image_small:
          type: string
          nullable: true
          maxLength: 1024
        image_medium:
          type: string
          nullable: true
          maxLength: 1024
        image_file:
          type: string
          format: uri
          readOnly: true
          nullable: true
        image_small_file:
          type: string
          format: uri
          readOnly: true
          nullable: true
        image_medium_file:
          type: string
          format: uri
          readOnly: true
          nullable: true
        profile_image_small:
          type: string
          description: Custom getter for small profile image
          readOnly: true
        profile_image_medium:
          type: string
          description: Custom getter for medium profile image
          readOnly: true
        bio:
          type: string
          nullable: true
        headline:
          type: string
          nullable: true
          maxLength: 60
        username:
          type: string
          description: Custom getter for the username
          readOnly: true
        placename:
          type: string
          description: Custom getter for location text
          readOnly: true
        topic_interests:
          type: array
          items:
            $ref: '#/components/schemas/LearningResourceTopic'
        goals:
          type: array
          items:
            $ref: '#/components/schemas/GoalsEnum'
        current_education:
          oneOf:
          - $ref: '#/components/schemas/CurrentEducationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        certificate_desired:
          oneOf:
          - $ref: '#/components/schemas/CertificateDesiredEnum'
          - $ref: '#/components/schemas/BlankEnum'
        time_commitment:
          oneOf:
          - $ref: '#/components/schemas/TimeCommitmentEnum'
          - $ref: '#/components/schemas/BlankEnum'
        learning_format:
          oneOf:
          - $ref: '#/components/schemas/LearningFormatEnum'
          - $ref: '#/components/schemas/BlankEnum'
        preference_search_filters:
          allOf:
          - $ref: '#/components/schemas/PreferencesSearch'
          readOnly: true
      required:
      - image_file
      - image_medium_file
      - image_small_file
      - placename
      - preference_search_filters
      - profile_image_medium
      - profile_image_small
      - username
    ProfileRequest:
      type: object
      description: Serializer for Profile
      properties:
        name:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        image_small:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        image_medium:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1024
        email_optin:
          type: boolean
          writeOnly: true
        toc_optin:
          type: boolean
          writeOnly: true
        bio:
          type: string
          nullable: true
        headline:
          type: string
          nullable: true
          maxLength: 60
        location:
          writeOnly: true
          nullable: true
        topic_interests:
          type: array
          items:
            type: integer
        goals:
          type: array
          items:
            $ref: '#/components/schemas/GoalsEnum'
        current_education:
          oneOf:
          - $ref: '#/components/schemas/CurrentEducationEnum'
          - $ref: '#/components/schemas/BlankEnum'
        certificate_desired:
          oneOf:
          - $ref: '#/components/schemas/CertificateDesiredEnum'
          - $ref: '#/components/schemas/BlankEnum'
        time_commitment:
          oneOf:
          - $ref: '#/components/schemas/TimeCommitmentEnum'
          - $ref: '#/components/schemas/BlankEnum'
        learning_format:
          oneOf:
          - $ref: '#/components/schemas/LearningFormatEnum'
          - $ref: '#/components/schemas/BlankEnum'
    ProgramCertificate:
      type: object
      description: Serializer for Program Certificates
      properties:
        record_hash:
          type: string
          readOnly: true
        program_letter_generate_url:
          type: string
          readOnly: true
        program_letter_share_url:
          type: string
          readOnly: true
        program_title:
          type: string
          maxLength: 256
        user_full_name:
          type: string
          maxLength: 256
        user_email:
          type: string
          maxLength: 256
        user_edxorg_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        micromasters_program_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        mitxonline_program_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        user_edxorg_username:
          type: string
          nullable: true
          maxLength: 256
        user_gender:
          type: string
          nullable: true
          maxLength: 256
        user_address_city:
          type: string
          nullable: true
          maxLength: 256
        user_first_name:
          type: string
          nullable: true
          maxLength: 256
        user_last_name:
          type: string
          nullable: true
          maxLength: 256
        user_year_of_birth:
          type: string
          nullable: true
          maxLength: 256
        user_country:
          type: string
          nullable: true
          maxLength: 256
        user_address_postal_code:
          type: string
          nullable: true
          maxLength: 256
        user_street_address:
          type: string
          nullable: true
          maxLength: 256
        user_address_state_or_territory:
          type: string
          nullable: true
          maxLength: 256
        user_mitxonline_username:
          type: string
          nullable: true
          maxLength: 256
        program_completion_timestamp:
          type: string
          format: date-time
          nullable: true
      required:
      - program_letter_generate_url
      - program_letter_share_url
      - program_title
      - record_hash
      - user_email
    ResourceTypeEnum:
      enum:
      - news
      - events
      type: string
      description: |-
        * `news` - news
        * `events` - events
      x-enum-descriptions:
      - news
      - events
    SiteTypeEnum:
      enum:
      - facebook
      - linkedin
      - personal
      - twitter
      type: string
      description: |-
        * `facebook` - facebook
        * `linkedin` - linkedin
        * `personal` - personal
        * `twitter` - twitter
      x-enum-descriptions:
      - facebook
      - linkedin
      - personal
      - twitter
    SubChannel:
      type: object
      description: Serializer for SubChannels
      properties:
        parent_channel:
          type: string
          readOnly: true
        channel:
          type: string
          readOnly: true
        position:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - channel
      - parent_channel
    TimeCommitmentEnum:
      enum:
      - 0-to-5-hours
      - 5-to-10-hours
      - 10-to-20-hours
      - 20-to-30-hours
      - 30-plus-hours
      type: string
      description: |-
        * `0-to-5-hours` - <5 hours/week
        * `5-to-10-hours` - 5-10 hours/week
        * `10-to-20-hours` - 10-20 hours/week
        * `20-to-30-hours` - 20-30 hours/week
        * `30-plus-hours` - 30+ hours/week
      x-enum-descriptions:
      - <5 hours/week
      - 5-10 hours/week
      - 10-20 hours/week
      - 20-30 hours/week
      - 30+ hours/week
    TopicChannel:
      type: object
      description: Serializer for Channel model of type topic
      properties:
        id:
          type: integer
          readOnly: true
        avatar:
          type: string
          nullable: true
          description: Get the avatar image URL
        avatar_small:
          type: string
          nullable: true
          description: Get the avatar image small URL
          readOnly: true
        avatar_medium:
          type: string
          nullable: true
          description: Get the avatar image medium URL
          readOnly: true
        banner:
          type: string
          nullable: true
          description: Get the banner image URL
        is_moderator:
          type: boolean
          description: Return true if user is a moderator for the channel
          readOnly: true
        lists:
          type: array
          items:
            $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
        channel_url:
          type: string
          description: Get the URL for the channel
          readOnly: true
        featured_list:
          allOf:
          - $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
          nullable: true
          description: Learning path featured in this channel.
        sub_channels:
          type: array
          items:
            $ref: '#/components/schemas/SubChannel'
          readOnly: true
        channel_type:
          type: string
          default: topic
          allOf:
          - $ref: '#/components/schemas/TopicChannelTypeEnum'
          readOnly: true
        topic_detail:
          $ref: '#/components/schemas/ChannelTopicDetail'
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          pattern: ^[A-Za-z0-9_]+$
          maxLength: 100
        title:
          type: string
          maxLength: 100
        about:
          nullable: true
        configuration:
          nullable: true
        search_filter:
          type: string
          maxLength: 2048
        public_description:
          type: string
        ga_tracking_id:
          type: string
          maxLength: 24
        widget_list:
          type: integer
          nullable: true
      required:
      - avatar_medium
      - avatar_small
      - channel_type
      - channel_url
      - created_on
      - featured_list
      - id
      - is_moderator
      - lists
      - name
      - sub_channels
      - title
      - topic_detail
      - updated_on
    TopicChannelTypeEnum:
      enum:
      - topic
      type: string
      description: '* `topic` - Topic'
      x-enum-descriptions:
      - Topic
    UnitChannel:
      type: object
      description: Serializer for Channel model of type unit
      properties:
        id:
          type: integer
          readOnly: true
        avatar:
          type: string
          nullable: true
          description: Get the avatar image URL
        avatar_small:
          type: string
          nullable: true
          description: Get the avatar image small URL
          readOnly: true
        avatar_medium:
          type: string
          nullable: true
          description: Get the avatar image medium URL
          readOnly: true
        banner:
          type: string
          nullable: true
          description: Get the banner image URL
        is_moderator:
          type: boolean
          description: Return true if user is a moderator for the channel
          readOnly: true
        lists:
          type: array
          items:
            $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
        channel_url:
          type: string
          description: Get the URL for the channel
          readOnly: true
        featured_list:
          allOf:
          - $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
          nullable: true
          description: Learning path featured in this channel.
        sub_channels:
          type: array
          items:
            $ref: '#/components/schemas/SubChannel'
          readOnly: true
        channel_type:
          type: string
          default: unit
          allOf:
          - $ref: '#/components/schemas/UnitChannelTypeEnum'
          readOnly: true
        unit_detail:
          $ref: '#/components/schemas/ChannelUnitDetail'
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          pattern: ^[A-Za-z0-9_]+$
          maxLength: 100
        title:
          type: string
          maxLength: 100
        about:
          nullable: true
        configuration:
          nullable: true
        search_filter:
          type: string
          maxLength: 2048
        public_description:
          type: string
        ga_tracking_id:
          type: string
          maxLength: 24
        widget_list:
          type: integer
          nullable: true
      required:
      - avatar_medium
      - avatar_small
      - channel_type
      - channel_url
      - created_on
      - featured_list
      - id
      - is_moderator
      - lists
      - name
      - sub_channels
      - title
      - unit_detail
      - updated_on
    UnitChannelTypeEnum:
      enum:
      - unit
      type: string
      description: '* `unit` - Unit'
      x-enum-descriptions:
      - Unit
    User:
      type: object
      description: Serializer for User
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        profile:
          $ref: '#/components/schemas/Profile'
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        is_article_editor:
          type: boolean
          readOnly: true
        is_learning_path_editor:
          type: boolean
          readOnly: true
      required:
      - first_name
      - id
      - is_article_editor
      - is_learning_path_editor
      - last_name
      - profile
      - username
    UserRequest:
      type: object
      description: Serializer for User
      properties:
        profile:
          $ref: '#/components/schemas/ProfileRequest'
        email:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - profile
    UserWebsite:
      type: object
      description: Serializer for UserWebsite
      properties:
        id:
          type: integer
          readOnly: true
        profile:
          type: integer
        url:
          type: string
          maxLength: 200
        site_type:
          allOf:
          - $ref: '#/components/schemas/SiteTypeEnum'
          readOnly: true
          default: personal
      required:
      - id
      - profile
      - site_type
      - url
    UserWebsiteRequest:
      type: object
      description: Serializer for UserWebsite
      properties:
        profile:
          type: integer
        url:
          type: string
          minLength: 1
          maxLength: 200
      required:
      - profile
      - url
    WidgetInstance:
      type: object
      description: WidgetInstance serializer
      properties:
        id:
          type: integer
          readOnly: true
        widget_type:
          $ref: '#/components/schemas/WidgetTypeEnum'
        title:
          type: string
          maxLength: 200
        configuration:
          type: object
          additionalProperties: {}
          description: Returns the configuration to serialize
        json:
          type: object
          additionalProperties: {}
          nullable: true
          description: Renders the widget to json based on configuration
          readOnly: true
      required:
      - id
      - json
      - title
      - widget_type
    WidgetList:
      type: object
      description: Serializer for WidgetLists
      properties:
        id:
          type: integer
          readOnly: true
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/WidgetInstance'
          nullable: true
        available_widgets:
          type: array
          items:
            type: object
            properties:
              widget_type:
                type: string
              description:
                type: string
              form_spec:
                type: object
          readOnly: true
      required:
      - available_widgets
      - id
    WidgetListRequest:
      type: object
      description: Serializer for WidgetLists
      properties:
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/WidgetInstance'
          nullable: true
    WidgetTypeEnum:
      enum:
      - Markdown
      - URL
      - RSS Feed
      - People
      type: string
      description: |-
        * `Markdown` - Markdown
        * `URL` - URL
        * `RSS Feed` - RSS Feed
        * `People` - People
      x-enum-descriptions:
      - Markdown
      - URL
      - RSS Feed
      - People
