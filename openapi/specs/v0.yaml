openapi: 3.0.3
info:
  title: MIT Open API
  version: 0.0.1 (v0)
  description: MIT public API
paths:
  /api/v0/ckeditor/:
    get:
      operationId: ckeditor_retrieve
      description: Get the JWT to authenticate for CKEditor
      tags:
      - ckeditor
      responses:
        '200':
          description: No response body
  /api/v0/fields/:
    get:
      operationId: fields_list
      description: |-
        CRUD Operations related to Fields. Fields may represent groups or organizations
        at MIT and are a high-level categorization of content.
      summary: List
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - fields
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFieldChannelList'
          description: ''
    post:
      operationId: fields_create
      description: |-
        CRUD Operations related to Fields. Fields may represent groups or organizations
        at MIT and are a high-level categorization of content.
      summary: Create
      tags:
      - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldChannelCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldChannelCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldChannelCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldChannel'
          description: ''
  /api/v0/fields/{field_name}/:
    get:
      operationId: fields_retrieve
      description: |-
        CRUD Operations related to Fields. Fields may represent groups or organizations
        at MIT and are a high-level categorization of content.
      summary: Retrieve
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
        required: true
      tags:
      - fields
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldChannel'
          description: ''
    patch:
      operationId: fields_partial_update
      description: |-
        CRUD Operations related to Fields. Fields may represent groups or organizations
        at MIT and are a high-level categorization of content.
      summary: Update
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
        required: true
      tags:
      - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFieldChannelWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFieldChannelWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFieldChannelWriteRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldChannel'
          description: ''
    delete:
      operationId: fields_destroy
      description: |-
        CRUD Operations related to Fields. Fields may represent groups or organizations
        at MIT and are a high-level categorization of content.
      summary: Destroy
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
        required: true
      tags:
      - fields
      responses:
        '204':
          description: No response body
  /api/v0/fields/{field_name}/moderators/:
    get:
      operationId: fields_moderators_list
      description: View for listing and adding moderators
      summary: Field Moderators List
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
          pattern: ^[A-Za-z0-9_]+$
        required: true
      tags:
      - fields
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldModerator'
          description: ''
    post:
      operationId: fields_moderators_create
      description: View for listing and adding moderators
      summary: Field Moderators Create
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
          pattern: ^[A-Za-z0-9_]+$
        required: true
      tags:
      - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldModeratorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldModeratorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldModeratorRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldModerator'
          description: ''
  /api/v0/fields/{field_name}/moderators/{moderator_name}/:
    delete:
      operationId: fields_moderators_destroy
      description: Remove the user from the moderator groups for this website
      summary: Field Moderators Destroy
      parameters:
      - in: path
        name: field_name
        schema:
          type: string
          pattern: ^[A-Za-z0-9_]+$
        required: true
      - in: path
        name: moderator_name
        schema:
          type: string
          pattern: ^[A-Za-z0-9_]+$
        required: true
      tags:
      - fields
      responses:
        '204':
          description: No response body
  /api/v0/news_events/:
    get:
      operationId: news_events_list
      description: Get a paginated list of feed items.
      parameters:
      - in: query
        name: feed_type
        schema:
          type: array
          items:
            type: string
            enum:
            - events
            - news
        description: |-
          The type of item

          * `news` - News
          * `events` - Events
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - news_events
      responses:
        '200':
          description: No response body
  /api/v0/news_events/{id}/:
    get:
      operationId: news_events_retrieve
      description: Retrieve a single feed item.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed item.
        required: true
      tags:
      - news_events
      responses:
        '200':
          description: No response body
  /api/v0/news_events_sources/:
    get:
      operationId: news_events_sources_list
      description: Get a paginated list of news/event feed sources.
      parameters:
      - in: query
        name: feed_type
        schema:
          type: array
          items:
            type: string
            enum:
            - events
            - news
        description: |-
          The type of source

          * `news` - News
          * `events` - Events
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - news_events_sources
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeedSourceList'
          description: ''
  /api/v0/news_events_sources/{id}/:
    get:
      operationId: news_events_sources_retrieve
      description: Retrieve a single news/event feed source.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this feed source.
        required: true
      tags:
      - news_events_sources
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedSource'
          description: ''
  /api/v0/users/me/:
    get:
      operationId: users_me_retrieve
      description: User retrieve and update viewsets for the current user
      tags:
      - users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v0/widget_lists/{id}/:
    get:
      operationId: widget_lists_retrieve
      description: API for managing widget lists
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this widget list.
        required: true
      tags:
      - widget_lists
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetList'
          description: ''
    put:
      operationId: widget_lists_update
      description: API for managing widget lists
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this widget list.
        required: true
      tags:
      - widget_lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WidgetListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WidgetListRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetList'
          description: ''
    patch:
      operationId: widget_lists_partial_update
      description: API for managing widget lists
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this widget list.
        required: true
      tags:
      - widget_lists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWidgetListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWidgetListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWidgetListRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetList'
          description: ''
components:
  schemas:
    FeedImage:
      type: object
      description: Serializer for FeedImage
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          maxLength: 2048
        description:
          type: string
          maxLength: 1024
        alt:
          type: string
          maxLength: 1024
      required:
      - id
    FeedSource:
      type: object
      description: FeedSource serializer
      properties:
        id:
          type: integer
          readOnly: true
        image:
          $ref: '#/components/schemas/FeedImage'
        title:
          type: string
          maxLength: 255
        url:
          type: string
          format: uri
          maxLength: 200
        description:
          type: string
        feed_type:
          $ref: '#/components/schemas/FeedTypeEnum'
      required:
      - feed_type
      - id
      - image
      - title
      - url
    FeedTypeEnum:
      enum:
      - news
      - events
      type: string
      description: |-
        * `news` - News
        * `events` - Events
    FieldChannel:
      type: object
      description: Serializer for FieldChannel
      properties:
        name:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        about:
          readOnly: true
          nullable: true
        public_description:
          type: string
          readOnly: true
        subfields:
          type: array
          items:
            $ref: '#/components/schemas/Subfield'
          readOnly: true
        featured_list:
          allOf:
          - $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
          nullable: true
          description: Learning path featured in this field.
        lists:
          type: array
          items:
            $ref: '#/components/schemas/LearningPathPreview'
          readOnly: true
        avatar:
          type: string
          nullable: true
          description: Get the avatar image URL
        avatar_medium:
          type: string
          nullable: true
          description: Get the avatar image medium URL
          readOnly: true
        avatar_small:
          type: string
          nullable: true
          description: Get the avatar image small URL
          readOnly: true
        banner:
          type: string
          nullable: true
          description: Get the banner image URL
        widget_list:
          type: integer
          readOnly: true
          nullable: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        ga_tracking_id:
          type: string
          readOnly: true
        is_moderator:
          type: boolean
          description: Return true if user is a moderator for the channel
          readOnly: true
      required:
      - about
      - avatar_medium
      - avatar_small
      - created_on
      - featured_list
      - ga_tracking_id
      - id
      - is_moderator
      - lists
      - name
      - public_description
      - subfields
      - title
      - updated_on
      - widget_list
    FieldChannelCreateRequest:
      type: object
      description: |-
        Write serializer for FieldChannel. Uses primary keys for referenced objects
        during requests, and delegates to FieldChannelSerializer for responses.
      properties:
        name:
          type: string
          minLength: 1
          pattern: ^[A-Za-z0-9_]+$
          maxLength: 100
        title:
          type: string
          minLength: 1
          maxLength: 100
        public_description:
          type: string
        subfields:
          type: array
          items:
            type: string
            minLength: 1
        featured_list:
          type: integer
          nullable: true
          description: Learng path featured in this field.
        lists:
          type: array
          items:
            type: integer
            nullable: true
          description: Learng paths in this field.
        avatar:
          type: string
          format: binary
          nullable: true
        banner:
          type: string
          format: binary
          nullable: true
        about:
          nullable: true
      required:
      - name
      - title
    FieldModerator:
      type: object
      description: Serializer for moderators
      properties:
        moderator_name:
          type: string
          description: Returns the name for the moderator
        email:
          type: string
          description: Get the email from the associated user
        full_name:
          type: string
          description: Get the full name of the associated user
          readOnly: true
      required:
      - full_name
    FieldModeratorRequest:
      type: object
      description: Serializer for moderators
      properties:
        moderator_name:
          type: string
          description: Returns the name for the moderator
        email:
          type: string
          description: Get the email from the associated user
    LearningPathPreview:
      type: object
      description: Serializer for a minimal preview of Learning Paths
      properties:
        title:
          type: string
          maxLength: 256
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 2048
        id:
          type: integer
          readOnly: true
      required:
      - id
      - title
    PaginatedFeedSourceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FeedSource'
    PaginatedFieldChannelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FieldChannel'
    PatchedFieldChannelWriteRequest:
      type: object
      description: Similar to FieldChannelCreateSerializer, with read-only name
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 100
        public_description:
          type: string
        subfields:
          type: array
          items:
            type: string
            minLength: 1
        featured_list:
          type: integer
          nullable: true
          description: Learng path featured in this field.
        lists:
          type: array
          items:
            type: integer
            nullable: true
          description: Learng paths in this field.
        avatar:
          type: string
          nullable: true
          description: Get the avatar image URL
        banner:
          type: string
          nullable: true
          description: Get the banner image URL
        about:
          nullable: true
    PatchedWidgetListRequest:
      type: object
      description: Serializer for WidgetLists
      properties:
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/WidgetInstance'
          nullable: true
    Profile:
      type: object
      description: Serializer for Profile
      properties:
        name:
          type: string
          nullable: true
        image:
          type: string
          nullable: true
          maxLength: 1024
        image_small:
          type: string
          nullable: true
          maxLength: 1024
        image_medium:
          type: string
          nullable: true
          maxLength: 1024
        image_file:
          type: string
          format: uri
          nullable: true
        image_small_file:
          type: string
          format: uri
          nullable: true
        image_medium_file:
          type: string
          format: uri
          nullable: true
        profile_image_small:
          type: string
          readOnly: true
        profile_image_medium:
          type: string
          readOnly: true
        bio:
          type: string
          nullable: true
        headline:
          type: string
          nullable: true
          maxLength: 60
        username:
          type: string
          readOnly: true
        placename:
          type: string
          readOnly: true
      required:
      - placename
      - profile_image_medium
      - profile_image_small
      - username
    Subfield:
      type: object
      description: Serializer for Subfields
      properties:
        parent_field:
          type: string
          readOnly: true
        field_channel:
          type: string
          readOnly: true
        position:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - field_channel
      - parent_field
    User:
      type: object
      description: Serializer for User
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        profile:
          $ref: '#/components/schemas/Profile'
      required:
      - id
      - profile
      - username
    WidgetInstance:
      type: object
      description: WidgetInstance serializer
      properties:
        id:
          type: integer
          readOnly: true
        widget_type:
          $ref: '#/components/schemas/WidgetTypeEnum'
        title:
          type: string
          maxLength: 200
        configuration:
          type: string
        json:
          type: string
          readOnly: true
      required:
      - id
      - json
      - title
      - widget_type
    WidgetList:
      type: object
      description: Serializer for WidgetLists
      properties:
        id:
          type: integer
          readOnly: true
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/WidgetInstance'
          nullable: true
        available_widgets:
          type: array
          items:
            type: object
            properties:
              widget_type:
                type: string
              description:
                type: string
              form_spec:
                type: object
          readOnly: true
      required:
      - available_widgets
      - id
    WidgetListRequest:
      type: object
      description: Serializer for WidgetLists
      properties:
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/WidgetInstance'
          nullable: true
    WidgetTypeEnum:
      enum:
      - Markdown
      - URL
      - RSS Feed
      - People
      type: string
      description: |-
        * `Markdown` - Markdown
        * `URL` - URL
        * `RSS Feed` - RSS Feed
        * `People` - People
