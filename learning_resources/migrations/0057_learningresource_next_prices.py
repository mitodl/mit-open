# Generated by Django 4.2.14 on 2024-07-18 18:58

import django.contrib.postgres.fields
from django.db import migrations, models
from django.db.models import Q
from django.utils import timezone

from learning_resources.constants import LearningResourceType
from learning_resources.etl.constants import ETLSource


def backpopulate_prices(apps, schema_editor):
    """
    Assign prices for published programs and courses; default of [] is fine for others.
    """
    LearningResource = apps.get_model("learning_resources", "LearningResource")
    for resource in LearningResource.objects.exclude(
        etl_source__in=[ETLSource.oll.name, ETLSource.ocw.name]
    ).filter(
        published=True,
        resource_type__in=[
            LearningResourceType.course.name,
            LearningResourceType.program.name,
        ],
    ):
        best_run = (
            resource.runs.filter(Q(published=True) & Q(start_date__gt=timezone.now()))
            .order_by("start_date")
            .first()
            or resource.runs.filter(published=True).order_by("-start_date").first()
        )
        resource.prices = best_run.prices if best_run and best_run.prices else []
        resource.save()


class Migration(migrations.Migration):
    dependencies = [
        ("learning_resources", "0056_alter_learningresource_readable_id"),
    ]

    operations = [
        migrations.AddField(
            model_name="learningresource",
            name="prices",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.DecimalField(decimal_places=2, max_digits=12),
                default=list,
                size=None,
            ),
        ),
        migrations.RunPython(
            backpopulate_prices, reverse_code=migrations.RunPython.noop
        ),
    ]
