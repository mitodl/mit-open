# Generated by Django 4.2.15 on 2024-09-04 15:18
from urllib.parse import urljoin

import django.contrib.postgres.fields
from django.conf import settings
from django.db import migrations, models

import learning_resources.models
from learning_resources.constants import LearningResourceDelivery
from learning_resources.etl.constants import ETLSource

OCW_HIDDEN_DOWNLOADS = [
    "11-308j-ecological-urbanism-spring-2024",
    "11-309j-sensing-place-photography-as-inquiry-spring-2024",
    "11-405-just-money-banking-as-if-society-mattered-spring-2021",
    "12-340x-global-warming-science-spring-2020",
    "15-053x-optimization-methods-in-business-analytics-summer-2021",
    "15-480x-the-science-and-business-of-biotechnology-fall-2021",
    "15-481x-adaptive-markets-financial-market-dynamics-and-human-behavior-fall-2022",
    "18-01-calculus-i-single-variable-calculus-fall-2020",
    "2-009-product-engineering-process-fall-2021",
    "2-00b-toy-product-design-spring-2021",
    "3-012sx-structure-of-materials-spring-2019",
    "3-15x-electrical-optical-and-magnetic-materials-and-devices-spring-2020",
    "6-00-introduction-to-computer-science-and-programming-fall-2008",
    "6-00sc-introduction-to-computer-science-and-programming-spring-2011",
    "6-036-introduction-to-machine-learning-fall-2020",
    "6-4210-robotic-manipulation-fall-2022",
    "6-5060-algorithm-engineering-spring-2023",
    "6-5830-database-systems-fall-2023",
    "6-832-underactuated-robotics-spring-2022",
    "6-s062-generative-artificial-intelligence-in-k12-education-fall-2023",
    "6-s191-introduction-to-deep-learning-january-iap-2020",
    "6-s980-machine-learning-for-inverse-graphics-fall-2022",
    "7-00-covid-19-sars-cov-2-and-the-pandemic-fall-2020",
    "7-00-covid-19-sars-cov-2-and-the-pandemic-fall-2021",
    "8-02-physics-ii-electricity-and-magnetism-spring-2019",
    "8-370x-quantum-information-science-i-spring-2018",
    "8-371x-quantum-information-science-ii-spring-2018",
    "8-s271-nuclear-weapons-history-and-future-prospects-spring-2022",
    "hst-936x-global-health-informatics-to-improve-quality-of-care-spring-2020",
    "hst-953-collaborative-data-science-for-healthcare-fall-2020",
    "res-11-001-cite-reports-fall-2015",
    "res-11-003-climate-justice-instructional-toolkit-fall-2023",
    "res-11-550-leveraging-urban-mobility-disruptions-to-create-better-cities-spring-2021",
    "res-12-002-terrascope-spring-2023",
    "res-14-003-the-roosevelt-project-spring-2023",
    "res-15-001-mit-sloan-learningedge-fall-2008",
    "res-15-005-healthcare-finance-15-482x-spring-2019",
    "res-16-002-how-to-cad-almost-anything-january-iap-2024",
    "res-17-001-mit-election-data-science-lab-fall-2020",
    "res-17-002-mit-governance-lab-spring-2023",
    "res-18-003-calculus-for-beginners-and-artists-spring-2005",
    "res-21g-3001-teaching-la-princesse-de-cleves-fall-2023",
    "res-21g-3002-teaching-marguerite-de-navarres-heptameron-fall-2023",
    "res-21g-3003-marguerite-de-roberval-a-web-based-approach-to-teaching-a-renaissance-heroine-fall-2023",
    "res-21g-3004-marguerite-de-navarre-society-website-fall-2023",
    "res-21g-601-telebridges-russian-conversation-exchange-site-fall-2021",
    "res-21h-001-visualizing-the-birth-of-modern-tokyo-spring-2021",
    "res-21m-001-heavy-metal-101-january-iap-2023",
    "res-7-001-pre-7-01-getting-up-to-speed-in-biology-summer-2019",
    "res-7-003-brave-new-planet-fall-2020",
    "res-7-004-bionook-online-biology-resources-spring-2021",
    "res-7-006-7-03x-genetics",
    "res-7-007-7-06x-cell-biology",
    "res-7-008-7-28x-molecular-biology",
    "res-8-002-a-wikitextbook-for-introductory-mechanics-fall-2009",
    "res-8-003-physics-demonstration-videos-spring-2012",
    "res-8-008-nuclear-weapons-education-project-spring-2022",
    "res-9-004-nancys-brain-talks-fall-2022",
    "res-9-005-fmri-bootcamp-fall-2017",
    "res-9-006-afni-training-bootcamp-spring-2018",
    "res-9-007-meg-workshop-spring-2019",
    "res-9-008-brain-and-cognitive-sciences-computational-tutorials",
    "res-bloss-blended-learning-open-source-science-or-math-studies-blossoms-spring-2010",
    "res-cms-154-launching-innovation-in-schools-spring-2019",
    "res-cms-155-design-thinking-for-leading-and-learning-spring-2019",
    "res-cms-501-envisioning-the-graduate-of-the-future-spring-2020",
    "res-cms-502-competency-based-education-the-why-what-and-how-spring-2020",
    "res-cms-504-sorting-truth-from-fiction-civic-online-reasoning-spring-2021",
    "res-ec-002-lean-research-skills-for-conducting-interviews-spring-2021",
    "res-ec-003-d-lab-student-showcases-spring-2022",
    "res-ec-004-energy-needs-assessment-toolkit",
    "res-env-004-mit-climate-portal-fall-2020",
    "res-env-005-climate-science-risk-solutions-a-climate-primer",
    "res-hso-001-mit-haystack-observatory-k12-stem-lesson-plans",
    "res-hst-001-mit-little-devices-lab-fall-2021",
    "res-ll-001-introduction-to-radar-systems-spring-2007",
    "res-ll-002-adaptive-antennas-and-phased-arrays-spring-2010",
    "res-mas-001-raise-responsible-ai-for-social-empowerment-and-education-spring-2022",
    "res-solvex-business-and-impact-planning-for-social-enterprises-0-solvex-summer-2021",
    "res-tl-002-star-software-tools-for-academics-and-researchers-spring-2012",
    "res-tll-007-case-studies-in-social-and-ethical-responsibilities-of-computing-fall-2021",
]


def populate_delivery(apps, schema_editor):
    """
    Populate delivery field.  Initial delivery should be identical to learning_format,
    with "offline" added for OCW courses except ones in the list above.
    """
    LearningResource = apps.get_model("learning_resources", "LearningResource")
    urls = [
        urljoin(settings.OCW_BASE_URL, f"courses/{url}/")
        for url in OCW_HIDDEN_DOWNLOADS
    ]
    LearningResource.objects.all().filter(published=True).update(
        delivery=models.F("learning_format")
    )
    LearningResource.objects.all().filter(
        published=True, etl_source=ETLSource.ocw.name
    ).exclude(url__in=urls).update(
        delivery=[
            LearningResourceDelivery.online.name,
            LearningResourceDelivery.offline.name,
        ]
    )


class Migration(migrations.Migration):
    dependencies = [
        ("learning_resources", "0061_learningresource_completeness"),
    ]

    operations = [
        migrations.AddField(
            model_name="learningresource",
            name="delivery",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    choices=[
                        ("online", "Online"),
                        ("hybrid", "Hybrid"),
                        ("in_person", "In person"),
                        ("offline", "Offline"),
                    ],
                    db_index=True,
                    max_length=24,
                ),
                default=learning_resources.models.default_learning_format,
                size=None,
            ),
        ),
        migrations.RunPython(populate_delivery, migrations.RunPython.noop),
    ]
