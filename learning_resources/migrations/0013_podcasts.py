# Generated by Django 4.1.10 on 2023-09-18 12:28
import json
from pathlib import Path

import django.db.models.deletion
from django.db import migrations, models


def update_platforms(apps, schema_editor):
    """
    Remove text widget instances
    """
    LearningResourcePlatform = apps.get_model(
        "learning_resources", "LearningResourcePlatform"
    )
    with Path.open(Path(__file__).parent.parent / "fixtures" / "platforms.json") as inf:
        platform_json = json.load(inf)
        for platform in platform_json:
            platform_fields = platform["fields"]
            LearningResourcePlatform.objects.update_or_create(
                platform=platform_fields["platform"],
                defaults=platform_fields,
            )


class Migration(migrations.Migration):
    dependencies = [
        ("learning_resources", "0012_userlists"),
    ]

    operations = [
        migrations.RunPython(update_platforms, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="learningresource",
            name="resource_type",
            field=models.CharField(
                choices=[
                    ("course", "course"),
                    ("program", "program"),
                    ("learning_path", "learning_path"),
                    ("podcast", "podcast"),
                    ("podcast_episode", "podcast_episode"),
                ],
                db_index=True,
                max_length=24,
            ),
        ),
        migrations.CreateModel(
            name="PodcastEpisode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("transcript", models.TextField(blank=True, default="")),
                ("episode_link", models.URLField(max_length=2048, null=True)),
                ("duration", models.CharField(blank=True, max_length=10, null=True)),
                ("rss", models.TextField(blank=True, null=True)),
                (
                    "learning_resource",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="podcast_episode",
                        to="learning_resources.learningresource",
                    ),
                ),
            ],
            options={
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Podcast",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("apple_podcasts_url", models.URLField(max_length=2048, null=True)),
                ("google_podcasts_url", models.URLField(max_length=2048, null=True)),
                ("rss_url", models.URLField(max_length=2048, null=True)),
                (
                    "learning_resource",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="podcast",
                        to="learning_resources.learningresource",
                    ),
                ),
            ],
            options={
                "ordering": ("id",),
            },
        ),
    ]
