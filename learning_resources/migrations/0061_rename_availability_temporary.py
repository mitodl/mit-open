# Generated by Django 4.2.15 on 2024-08-26 19:30

import django.contrib.postgres.fields
from django.db import migrations, models


def populate_availability_list(apps, schema_editor):
    """
    Set availability for resources that are always available to anytime.
    Some resources will need to be updated by ETL pipelines, but this handles
    OCW, videos, and podcasts (and their lists).
    """
    LearningResource = apps.get_model("learning_resources", "LearningResource")

    for resource in LearningResource.objects.filter(
        published=True, availability_old__isnull=False
    ):
        resource.availability_list = [resource.availability_old]
        resource.save()


class Migration(migrations.Migration):
    dependencies = [
        ("learning_resources", "0060_partially_populate_availability"),
    ]

    operations = [
        migrations.RenameField(
            model_name="learningresource",
            old_name="availability",
            new_name="availability_old",
        ),
        migrations.AddField(
            model_name="learningresource",
            name="availability_list",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(
                    choices=[("dated", "Dated"), ("anytime", "Anytime")],
                    max_length=24,
                    null=True,
                ),
                default=list,
                size=None,
            ),
        ),
        migrations.RunPython(populate_availability_list, migrations.RunPython.noop),
    ]
