# Generated by Django 4.2.14 on 2024-07-25 17:01

from django.db import migrations

from learning_resources.constants import (
    Availability,
    LearningResourceType,
    PlatformType,
)


def partially_populate_availability(apps, schema_editor):
    """
    Set availability for resources that are always available to anytime.
    Some resources will need to be updated by ETL pipelines, but this handles
    OCW, videos, and podcasts (and their lists).
    """
    LearningResource = apps.get_model("learning_resources", "LearningResource")

    for resource in LearningResource.objects.all().filter(published=True):
        if resource.resource_type in [
            LearningResourceType.video.name,
            LearningResourceType.video_playlist.name,
            LearningResourceType.podcast.name,
            LearningResourceType.podcast_episode.name,
        ] or (resource.platform and resource.platform.code == PlatformType.ocw.name):
            resource.availability = Availability.anytime.name
            resource.save()


class Migration(migrations.Migration):
    dependencies = [
        ("learning_resources", "0058_learningresource_availability"),
    ]

    operations = [
        migrations.RunPython(
            partially_populate_availability, migrations.RunPython.noop
        ),
    ]
