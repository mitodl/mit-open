# Generated by Django 4.1.10 on 2023-12-08 15:05

from django.db import migrations, models


def assign_new_offeror_foreign_keys(apps, schema_editor):
    """
    Update offeror pk for every resource that has one
    """
    LearningResource = apps.get_model("learning_resources", "LearningResource")
    LearningResourceOfferor = apps.get_model(
        "learning_resources", "LearningResourceOfferor"
    )
    LearningResourceOfferorNew = apps.get_model(
        "learning_resources", "LearningResourceOfferorNew"
    )
    for offeror in LearningResourceOfferor.objects.all():
        LearningResourceOfferorNew.objects.create(code=offeror.code, name=offeror.name)
    for lr in LearningResource.objects.filter(offered_by_id__isnull=False):
        lr.offered_by_new_id = lr.offered_by.code
        lr.offered_by = None
        lr.save()


class Migration(migrations.Migration):
    dependencies = [
        ("learning_resources", "0027_unique_offeror_code"),
    ]

    operations = [
        migrations.CreateModel(
            name="LearningResourceOfferorNew",
            fields=[
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "code",
                    models.CharField(max_length=12, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=256, unique=True)),
                ("professional", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="learningresource",
            name="offered_by_new",
            field=models.ForeignKey(
                "learningresourceofferornew",
                blank=True,
                null=True,
                db_constraint=True,
                on_delete=models.SET_NULL,
            ),
        ),
        migrations.RunPython(
            assign_new_offeror_foreign_keys, reverse_code=migrations.RunPython.noop
        ),
        migrations.RemoveField(
            model_name="learningresource",
            name="offered_by",
        ),
        migrations.DeleteModel(
            name="LearningResourceOfferor",
        ),
        migrations.RenameField(
            model_name="learningresource",
            old_name="offered_by_new",
            new_name="offered_by",
        ),
        migrations.RenameModel("LearningResourceOfferorNew", "LearningResourceOfferor"),
        migrations.AlterField(
            model_name="learningresource",
            name="offered_by",
            field=models.ForeignKey(
                null=True,
                on_delete=models.deletion.SET_NULL,
                to="learning_resources.learningresourceofferor",
            ),
        ),
    ]
