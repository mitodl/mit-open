/**
 * Generated by orval v6.17.0 🍺
 * Do not edit manually.
 * MIT Open Discussions Course Catalog API
 * Open Discussions public API
 * OpenAPI spec version: 0.0.1
 */
import { rest } from "msw"
import { faker } from "@faker-js/faker"

export const getModeratorsListMock = () =>
  Array.from(
    { length: faker.datatype.number({ min: 1, max: 10 }) },
    (_, i) => i + 1
  ).map(() => ({
    moderator_name: faker.helpers.arrayElement([
      faker.random.word(),
      undefined
    ]),
    email:     faker.helpers.arrayElement([faker.random.word(), undefined]),
    full_name: faker.random.word()
  }))

export const getModeratorsCreateMock = () => ({
  moderator_name: faker.helpers.arrayElement([faker.random.word(), undefined]),
  email:          faker.helpers.arrayElement([faker.random.word(), undefined]),
  full_name:      faker.random.word()
})

export const getModeratorsMSW = () => [
  rest.get("*/api/v0/fields/:fieldName/moderators/", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getModeratorsListMock())
    )
  }),
  rest.post("*/api/v0/fields/:fieldName/moderators/", (_req, res, ctx) => {
    return res(
      ctx.delay(1000),
      ctx.status(200, "Mocked status"),
      ctx.json(getModeratorsCreateMock())
    )
  }),
  rest.delete(
    "*/api/v0/fields/:fieldName/moderators/:moderatorName/",
    (_req, res, ctx) => {
      return res(ctx.delay(1000), ctx.status(200, "Mocked status"))
    }
  )
]
