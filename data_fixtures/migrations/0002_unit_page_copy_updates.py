# Generated by Django 4.2.13 on 2024-07-08 17:08

from django.db import migrations

fixtures = [
    {
        "name": "ocw",
        "offeror_configuration": {
            "audience": ["Students", "Professionals", "Educators", "Lifelong Learners"],
            "value_prop": (
                "For millions of learners and educators around the "
                "world, OpenCourseWare shares free open educational resources from "
                "across the entire MIT curriculum. With no "
                "sign-up needed, thousands of downloadable materials, "
                "and convenient online access, you're "
                "empowered for self-paced learning and adapting these materials in "
                "the ways that suit you best."
            ),
        },
        "channel_configuration": {
            "sub_heading": (
                "For millions of learners and educators around "
                "the world, OpenCourseWare shares free open educational resources"
                " from across the entire MIT curriculum. With no sign-up needed, "
                "thousands of downloadable materials, and convenient online access, "
                "you're empowered for self-paced learning and adapting these "
                "materials in the ways that suit you best."
            ),
        },
    },
    {
        "name": "mitx",
        "channel_configuration": {},
        "offeror_configuration": {
            "audience": ["Lifelong Learners", "Students", "Professionals"],
            "certifications": ["Certificate of Completion", "MicroMasters Credential"],
        },
    },
    {
        "name": "mitpe",
        "offeror_configuration": {
            "audience": [
                "Engineering Professionals",
                "Technical Professionals",
                "Scientists and Researchers",
                "Senior Executives",
            ],
            "formats": ["Online", "In-Person", "Hybrid"],
            "certifications": ["Certificate of Completion", "Professional Certificate"],
            "content_types": ["Professional"],
            "value_prop": (
                "MIT Professional Education is a leader in "
                "technology and engineering education"
                " for working professionals pursuing career advancement, and "
                "for organizations seeking to meet modern-day challenges "
                "by expanding the knowledge and skills of their employees. "
                "Courses are delivered in a range of formats—in-person "
                "(on-campus and live virtual), online, and through hybrid "
                "approaches—to meet the needs of today's learners."
            ),
        },
        "channel_configuration": {
            "heading": (
                "Join a powerful network of innovators and master "
                "skills the global market needs in years to come."
            ),
            "sub_heading": (
                "MIT Professional Education is a leader in technology and engineering "
                "education for working professionals pursuing career "
                "advancement, and for organizations seeking to meet modern-day "
                "challenges by expanding the knowledge and skills of their employees. "
                "Courses are delivered in a range of formats—in-person (on-campus and"
                " live virtual), online, and through hybrid approaches—to "
                "meet the needs of today's learners."
            ),
        },
    },
    {
        "name": "see",
        "offeror_configuration": {
            "audience": [
                "Business Professionals",
                "Senior Executives",
                "Entrepreneurs",
                "Intrapreneurs",
            ],
            "formats": ["Online", "In-Person", "Hybrid"],
            "fee": ["Paid"],
            "certifications": ["Certificate of Completion", "Professional Certificate"],
        },
        "channel_configuration": {},
    },
    {
        "name": "xpro",
        "offeror_configuration": {
            "formats": ["Online", "In Person", "Hybrid"],
            "certifications": ["Professional Certificate"],
        },
        "channel_configuration": {},
    },
    {
        "name": "mitx",
        "offeror_configuration": {
            "certifications": ["Professional Certificate"],
        },
        "channel_configuration": {},
    },
]


def update_copy(apps, schema_editor):
    Channel = apps.get_model("channels", "Channel")
    LearningResourceOfferor = apps.get_model(
        "learning_resources", "LearningResourceOfferor"
    )
    for fixture in fixtures:
        channel_configuration_updates = fixture["channel_configuration"]
        offeror_configuration_updates = fixture["offeror_configuration"]
        channel = Channel.objects.get(name=fixture["name"])
        if Channel.objects.filter(name=fixture["name"]).exists():
            for key, val in channel_configuration_updates.items():
                channel.configuration[key] = val
            channel.save()
        if LearningResourceOfferor.objects.filter(code=fixture["name"]).exists():
            offeror = LearningResourceOfferor.objects.get(code=fixture["name"])
            for key, val in offeror_configuration_updates.items():
                setattr(offeror, key, val)
            offeror.save()


class Migration(migrations.Migration):
    dependencies = [
        ("data_fixtures", "0001_add_testimonial_data"),
    ]

    operations = [
        migrations.RunPython(update_copy, migrations.RunPython.noop),
    ]
